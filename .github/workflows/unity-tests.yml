name: Unity CI
permissions:
  checks: write
  contents: read

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest     # Usa runners gratuitos de GitHub
    steps:
      
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
          

      - name: Clean test artifacts
        run: |
          rm -rf CodeCoverage
          rm -rf artifacts
      
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-
            
      
      - name: Run EditMode tests + Code Coverage
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion: 2022.3.25f1
          testMode: EditMode
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          coverageOptions: |
            enableCodeCoverage
            generateHtmlReport
            generateAdditionalMetrics
          artifactsPath: CoverageResults
          
      - name: List coverage output (debug)
        run: |
          echo "Workspace content --------"
          ls -R
          echo "CoverageResults content ---"
          ls -R CoverageResults || true
      
      - name: Convert coverage to lcov & cobertura
        uses: danielpalme/ReportGenerator-GitHub-Action@5
        with:
          reports: CoverageResults/editmode-results.xml
          targetdir: CoverageReports
          reporttypes: 'LCOV;Cobertura'
          
      - name: Create/update coverage badge
        uses: nwtgck/actions-coverage-badges@v2
        with:
          lcov-path: CoverageReports/lcov.info
          badge-path: badge-coverage.svg
          commit-message: "chore(ci): update coverage badge"
          github-token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build project (Windows)
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL:   ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: StandaloneWindows64
          unityVersion: 2022.3.25f1
          allowDirtyBuild: true
          versioning: None
      

      - uses: actions/upload-artifact@v4
        with:
          name: Build
          path: build
